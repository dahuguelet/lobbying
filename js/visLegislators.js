// Generated by CoffeeScript 1.8.0

(function() {
  var BubbleChart2, root;
var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };
BubbleChart2 = (function() {
  function BubbleChart2(data) {
    this.hide_details = __bind(this.hide_details, this);
    this.show_details = __bind(this.show_details, this);
    this.hide_category = __bind(this.hide_category, this);
    this.display_category2 = __bind(this.display_category2, this);
    this.move_towards_category = __bind(this.move_towards_category, this);
    this.display_by_category2 = __bind(this.display_by_category2, this);
    this.move_towards_center = __bind(this.move_towards_center, this);
    this.display_group_all = __bind(this.display_group_all, this);
    this.start = __bind(this.start, this);
    this.create_vis2 = __bind(this.create_vis2, this);
    this.create_nodes = __bind(this.create_nodes, this);
    var max_amount;
    this.data = data;
    this.width = 900;
    this.height = 600;
    this.tooltip = CustomTooltip("lobby2_tooltip", 240);
    
    // Setting the centers for each bubble category
    this.category_centers = {
      "House of Representatives": {
        x: this.width * .35,
        y: this.height * .525
      },
      "Senate": {
        x: this.width * .65,
        y: this.height * .525
      }
    };
    this.layout_gravity = -.01;
    this.damper = 0.1;
    this.vis2 = null;
    this.nodes = [];
    this.force = null;
    this.circles = null;
    this.fill_color = d3.scale.ordinal()
      .domain(["blue", "red"])
      .range(["#70A7DB", "#FC7277"]);
    max_amount = d3.max(this.data, function(d) {
      return parseInt(d.amount_given);
    });
    this.radius_scale = d3.scale.pow()
      .exponent(0.5)
      .domain([0, max_amount])
      .range([1, 45]);
    this.create_nodes();
    this.create_vis2();
  }
  BubbleChart2.prototype.create_nodes = function() {
    this.data.forEach(__bind(function(d) {
      var node;
      node = {
        id: d.id,
        radius: this.radius_scale(parseInt(d.amount_given)),
        value: d.amount_given,
        //org: d.org_name,
        legislator: d.legislator,
        //industry: d.org_industry,
        party: d.party,
        group: d.group,
        category: d.category,
        rank: d.rank,
        x: Math.random() * 900,
        y: Math.random() * 800
      };
      return this.nodes.push(node);
    }, this));
    return this.nodes.sort(function(a, b) {
      return b.value - a.value;
    });
  };
  BubbleChart2.prototype.create_vis2 = function() {
    var that;
    this.vis2 = d3.select("#vis2")
      .append("svg")
      .attr("width", this.width)
      .attr("height", this.height)
      .attr("id", "svg_vis2");
    this.circles = this.vis2.selectAll("circle").data(this.nodes, function(d) {
      return d.id;
    });
    that = this;
    this.circles.enter()
      .append("circle")
      .attr("r", 0).attr("fill", __bind(function(d) {
      return this.fill_color(d.group);
    }, this))
      .attr("stroke-width", 3)
      .attr("stroke", __bind(function(d) {
      return d3.rgb(this.fill_color(d.group)).darker();
    }, this))
        .attr("id", function(d) {
      return "bubble_" + d.id;
    }).on("mouseover", function(d, i) {
      return that.show_details(d, i, this);
    }).on("mouseout", function(d, i) {
      return that.hide_details(d, i, this);
    });
    return this.circles.transition()
      .duration(2000)
      .attr("r", function(d) {
      return d.radius;
    });
  };
  BubbleChart2.prototype.charge = function(d) {
    return -Math.pow(d.radius, 2.0) / 8;
  };
  BubbleChart2.prototype.start = function() {
    return this.force = d3.layout.force().nodes(this.nodes).size([this.width, this.height]);
  };
  BubbleChart2.prototype.display_group_all = function() {
    this.force.gravity(this.layout_gravity)
      .charge(this.charge)
      .friction(0.9)
      .on("tick", __bind(function(e) {
      return this.circles.each(this.move_towards_center(e.alpha))
        .attr("cx", function(d) {
        return d.x;
      }).attr("cy", function(d) {
        return d.y;
      });
    }, this));
    this.force.start();
    return this.hide_category();
  };
  BubbleChart2.prototype.move_towards_center = function(alpha) {
    return __bind(function(d) {
      d.x = d.x + (this.center.x - d.x) * (this.damper + 0.02) * alpha;
      return d.y = d.y + (this.center.y - d.y) * (this.damper + 0.02) * alpha;
    }, this);
  };
  BubbleChart2.prototype.display_by_category2 = function() {
    this.force.gravity(this.layout_gravity)
      .charge(this.charge)
      .friction(0.9)
      .on("tick", __bind(function(e) {
      return this.circles.each(this.move_towards_category(e.alpha))
        .attr("cx", function(d) {
        return d.x;
      }).attr("cy", function(d) {
        return d.y;
      });
    }, this));
    this.force.start();
    return this.display_category2();
  };
  BubbleChart2.prototype.move_towards_category = function(alpha) {
    return __bind(function(d) {
      var target;
      target = this.category_centers[d.category];
      d.x = d.x + (target.x - d.x) * (this.damper + 0.02) * alpha * 1.1;
      return d.y = d.y + (target.y - d.y) * (this.damper + 0.02) * alpha * 1.1;
    }, this);
  };
  BubbleChart2.prototype.display_category2 = function() {
    var category, category_data, category_x, category_y;
    category_x = {
      "House of Representatives": this.width * .27,
      "Senate": this.width * .76,
    };
    category_y = {
      "House of Representatives": this.height * .05,
      "Senate": this.height * .05,
    }

    category_data = d3.keys(category_x);
    category = this.vis2.selectAll(".category")
      .data(category_data);
    return category.enter()
      .append("text")
        .attr("class", "category")
        .attr("x", __bind(function(d) {
          return category_x[d];
          }, this))
        .attr("y", __bind(function(d) {
          return category_y[d];
          }, this))
        .attr("text-anchor", "middle")
        .text(function(d) {
          return d;
        });
  };
  
  BubbleChart2.prototype.hide_category = function() {
    var category;
    return category = this.vis2.selectAll(".category").remove();
  };

  BubbleChart2.prototype.show_details = function(data, i, element) {
    var content;
    d3.select(element).attr("stroke", "black");
    content = "<span class=\"name\">Name:</span><span class=\"value\"> " + data.legislator + "</span><br/>";
    content += "<span class=\"name\">Amount received:</span><span class=\"value\"> $" + (addCommas(data.value)) + "</span><br/>";
    content += "<span class=\"name\">Party:</span><span class=\"value\"> " + data.party
     + "</span><br>";
    content += "<span class=\"name\">Rank:</span><span class=\"value\"> <strong> " + data.rank
     + "</strong> most of <strong> 188 </strong> legislators</span>";
    return this.tooltip.showTooltip(content, d3.event);
  };
  BubbleChart2.prototype.hide_details = function(data, i, element) {
    d3.select(element)
      .attr("stroke", __bind(function(d) {
      return d3.rgb(this.fill_color(d.group)).darker();
    }, this));
    return this.tooltip.hideTooltip();
  };
  return BubbleChart2;
})();
root = typeof exports !== "undefined" && exports !== null ? exports : this;

$(function() {
  var chart, render_vis2;
  chart = null;
  render_vis2 = function(csv) {
    chart = new BubbleChart2(csv);
    chart.start();
    return root.display_category2();
  };
  root.display_category2 = __bind(function() {
    return chart.display_by_category2();
  }, this);
  return d3.csv("data/top_legislators.csv", render_vis2);
});

}).call(this);
